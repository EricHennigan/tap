scriptencoding utf-8
" ^^ Please leave the above line at the start of the file.
set nocompatible          " Use Vim defaults (much better!)

call pathogen#infect()
syntax on
filetype plugin indent on " enable indentation

let mapleader = "\t"
let g:mapleader = "\t"

map qq :q!<CR>

set grepprg=grep\ -nH\ $* " make grep always report filename
set bs=2                " Allow backspacing over everything in insert mode
set ai                  " Always set auto-indenting on
set history=1000        " keep 1000 lines of command history
set ruler               " Show the cursor position all the time

"set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab
set ignorecase
set nohlsearch
set number
set paste

"appearance
set background=dark
if &diff
  let g:solarized_diffmode="high"
  colorscheme solarized
endif


" customize showing of special characters
set listchars=tab:â”Š\ ,trail:$
highlight NonText guifg=#4a4a59
highlight SpecialKey guifg=#4a4a59
set list

" customize status line
set laststatus=2
set statusline=%t       "tail of the filename
set statusline+=[%{strlen(&fenc)?&fenc:'none'}, "file encoding
set statusline+=%{&ff}] "file format
set statusline+=%h      "help file flag
set statusline+=%m      "modified flag
set statusline+=%r      "read only flag
set statusline+=%y      "filetype
set statusline+=%=      "left/right separator
set statusline+=%c,     "cursor column
set statusline+=%l/%L   "cursor line/total lines
set statusline+=\ %P    "percent through file

" use spell checking
set spell

" use tab completion
" set wildmode=list
" set wildmenu

" latex
filetype plugin on
let g:tex_flavor='latex'

" MiniBuffer https://github.com/fholgado/minibufexpl.vim
let g:miniBufExplMapWindowNavVim = 1 
let g:miniBufExplMapWindowNavArrows = 1 
let g:miniBufExplMapCTabSwitchBufs = 1 
let g:miniBufExplModSelTarget = 1 

" Annoying Whitespace
:highlight ExtraWhitespace ctermbg=blue guibg=blue
:match ExtraWhitespace /\s\+$/           "trailing whitespace
:match ExtraWhitespace /\s\+$\| \+\ze\t/ "trailing whitespace and spaces before a tab
:match ExtraWhitespace /[^\t]\zs\t\+/    "tabs that are not at the start of a line
":match ExtraWhitespace /^\t*\zs \+/      "spaces used for indenting (only tabs for indenting).

" highlight columns past 80 chars
set colorcolumn=81,101
highlight ColorColumn ctermbg=0
"highlight OverLength ctermbg=red ctermfg=white guibg=#592929
"match OverLength /\%81v.\+/

" NerdTree
map <leader>n :NERDTreeToggle<CR><CR>
let g:NERDTreeWinPos = "right"

" Glug
source /usr/share/vim/google/glug/bootstrap.vim
Glug gtimporter
Glug youcompleteme-google
